{"name":"Builder","tagline":"Unity Build Pipeline Automation","body":"Builder\r\n=======\r\n\r\n###Just Another Unity BuildPipeline Automation Tool\r\n\r\n+ Builder is a BuildPipeline automation tool for Unity3D. \r\n+ Builder requires **UnityPro** to function. [(More info)] (http://docs.unity3d.com/ScriptReference/BuildPipeline.html)\r\n+ You are **encouraged** to contribute to the project!\r\n+ Tested on Windows 7,8 and 10. It should also work on other systems in theory ^^\r\n\r\nBuilder uses following scripts from other Authors to implement some features;\r\n\r\n+ [**MiniJSON** by Calvin Rien] (https://gist.github.com/darktable/1411710)\r\n+ [**CommandLineCustomArguments** by EpixCode] (https://github.com/EpixCode/CommandLineCustomArguments)\r\n\r\n![Builder](http://i.imgur.com/P6JvAAk.png)\r\n\r\n![Builder](http://i.imgur.com/SsbUiT2.png)\r\n\r\n###UI Cheat Sheat\r\n+ **Save** : Overwrites current configuration\r\n+ **Load** : Opens file dialog to load a new configuration.\r\n+ **Save as Default** : Saves current configuration as default configuration.\r\n+ **Save as** : Well, pretty self explanatory isn't it :)\r\n+ **Load Default** : Loads default configuration.\r\n+ **Refresh Scenes** : Loads scene information defined in Build Settings.\r\n+ **Reset Settings** : Clears current configuration, Resets default configuration and tool settings to their initial states.\r\n\r\n\r\n###Using Builder with Command Line\r\n\r\n1. Import Builder into your project.\r\n2. Define a new Configuration using Builder UI.\r\n3. Save your configuration using **Save as** button in Builder UI.\r\n4. Now you can use saved configuration to call Builder from command line.\r\n\r\n **Sample code**\r\n`\"C:\\Program Files (x86)\\Unity\\Editor\\Unity.exe\" -quit -batchmode -projectPath \"<projectPath>\" -executeMethod Builder.CommandLineBuild -CustomArgs:confPath=\"<Configuration File Path>\"`\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}